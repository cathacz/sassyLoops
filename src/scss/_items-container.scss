// how many divs in HTML
$items-count: 15;

//animation definition

@keyframes move {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}
// Mixin to use animation
@mixin movement($duration, $rotation) {
  animation-name: move;
  animation-duration: $duration;
  animation-iteration-count: infinite;
  animation-direction: $rotation;
  animation-timing-function: linear;
}

@keyframes pulsation {
  0% {
    transform: scale(0.1);
  }
  25% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.1);
  }
  75% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.1);
  }
}
@mixin pulse($duration) {
  animation-name: pulsation;
  animation-duration: $duration;
  animation-iteration-count: infinite;
  animation-direction: normal;
  //   animation-timing-function: linear;
}
@keyframes droping {
  0% {
    transform: scaleY(1);
  }

  100% {
    transform: scaleY(3);
  }
}
// Mixin to use animation
@mixin drop($duration) {
  animation-name: droping;
  animation-duration: $duration;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}
body {
  background-color: salmon;
  margin: 0;
}

.items-container {
  background-color: seagreen;
  margin: 25vh auto;
  display: flex;
  align-items: center;
  justify-content: center;
  justify-content: space-evenly;
  width: 75vw;
  height: 50vh;
}
.item,
.i {
  background: sandybrown;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 0.7vw;
  height: 4vw;
  border-radius: 5px;
}
.item {
  &::before {
    content: "";
    background: steelblue;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 4vw;
    height: 0.7vw;
    border-radius: 5px;
    top: 4vw;
    animation-play-state: paused;
  }
  &::after {
    content: "";
    background: salmon;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 4vw;
    height: 0.7vw;
    border-radius: 5px;
    top: -4vw;
    animation-play-state: paused;
  }
}
.i {
  &::before {
    content: "";
    background: steelblue;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 4vw;
    height: 0.7vw;
    border-radius: 5px;
    top: 4vw;
    animation-play-state: paused;
  }
  &::after {
    content: "";
    background: salmon;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 4vw;
    height: 0.7vw;
    border-radius: 5px;
    top: -4vw;
    animation-play-state: paused;
  }
}
@for $i from 1 through $items-count {
  .item:nth-child(#{$i}) {
    @include movement(random(10) + 1 + s, alternate);
  }
}
@for $i from 1 through $items-count {
  .i:nth-child(#{$i}) {
    @include movement(random(5) + 1 + s, alternate-reverse);
  }
}
.stalk-container {
  background-color: lightblue;
  position: fixed;

  right: 2vw;
  top: 6vw;
  margin: auto;
  display: flex;
  // align-items: center;
  justify-content: flex-start;
  justify-content: space-between;
  width: 85vw;
  height: 1vh;
}
.stalk {
  display: flex;
  justify-content: center;
  align-items: center;

  position: relative;
  top: -1vw;
  width: 100px;
  height: 90px;

  &::before,
  &::after {
    position: absolute;
    content: "";
    left: 40px;
    top: 0;
    width: 40px;
    height: 65px;
    background: seashell;
    border-radius: 40px 40px 0 0;
    transform: rotate(-45deg);
    transform-origin: 0 100%;
  }
  &::after {
    left: 0;
    transform: rotate(45deg);
    transform-origin: 100% 100%;
  }
}
@for $i from 1 through $items-count {
  .stalk:nth-child(#{$i}) {
    @include pulse(random(5) + 1 + s);
    animation-delay: random(15) + 1 + s;
    @if (($i % 2) != 0) {
    }
  }
}
.drop-container {
  background-color: #e1ad01;
  position: fixed;
  top: 0;
  left: 2vw;
  margin: auto;
  display: flex;
  // align-items: center;
  justify-content: flex-start;
  justify-content: space-between;
  width: 85vw;
  height: 2vh;
}
.drop {
  display: flex;
  justify-content: center;
  //   align-items: center;
  background-color: sandybrown;
  position: relative;
  top: 2vw;
  width: 3vw;
  height: 1.5vw;
  border-radius: 5px;
  &::after {
    content: "";
    width: 2vw;
    height: 2vw;
    background-color: tomato;

    border-radius: 0 0 5px 5px;
    top: 0vw;
  }
}
@for $i from 1 through $items-count {
  .drop:nth-child(#{$i}) {
    @include drop(random(8) + s);
    @if (($i % 2) != 0) {
      background-color: peru;
    }
  }
}
